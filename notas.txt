Tipos de datos:

Number->Hace refencia a un numero
String->Hace referencia a un texto
Bool->Hace refenciaa un Booleano(true o false)
Null->Hace refencia a la ausencia de contenido
Undefined->hace refencia a la ausencia de informacion 
Object->Hace refencia a un objeto

Condicionales JavaScript:

1-> Simple:if 
Evalua una condicion y se ejecuta el codigo siempre y cuando el valor sea true
2->Dual o compuesto: if ... else
Evalua una condicion y se ejecuta el codigo en dos caminos diferentes dependiendo del valor de la condicion (true o false)
3->Anidado: if...else if...else
Es una mezcla del simple con el dual n cantidad de veces(n puede ser cualquier numero)
4->Multiple:switch
Es un menu de opciones 
5->En linea:operador ternario(? :)
es lo mismo que el dual o compuesto, pero mas sencillo

Expresiones Booleanas:
Es una experiencia que se evalua con true o con false. Es el resultado de comparar dos valores 

Comparadores
Menor:<(Excluyente)
Mayor:>(Excluyente)
Mayor o igual :>=(Incluyente)
Menor o igual :>=(Incluyente)
Diferente simple: !=
Diferente estricto:!==
Comparador simple:==


Estrcuturas de repetición: Bucles-ciclos o loops
for, while y Do.while
for ->Estructura de repetición que se ejecuta n cantidad de veces, donde se conoce el valor de numero de n
while y do-while->Estructura de repetición que se ejecuta n cantidad de veces, donde se puede cocoecer o no el valor de n 

TODOS los ciclos deben tener tres elementos 
1-Variable de control
2-Control de la variable (condicional)
3-Incremento de la varible de control

Acumuladores y contadores 
Contador:Variable o elemento auxiliar que cuenta de n en n, según la cantidad de veces que se ejecuta en un codigo
-> index++ == index=index+1 ->estas formas son iguales para aplicar un contador
Acumulador:Variable o elemento auxiliar que acumula o suma un valor especifico por cada contador.El acumulador siempre se 
define por fuera del ciclo
->variable+=otroValor 

while:(Por defecto sera un ciclo infinito)
la variable de control se define por fuera del ciclo
Se define la comdicion dentro del ciclo
Se hace el control dentro del ciclo

Todo ciclo For se puede convertir a un ciclo while o Do while

while y Do While Diferencias
1-Se escriben diferente 
2-El While se ejecuta unicamente si la condicion es verdadera, primero pregunta y luego ejecuta. El ciclo Do while primero ejecuta y luego pregunta, garantiza la ejecución del codigo al menos 1 vez 

Diferencias entre var, let y const 
Scope o alacance de la variable:(local o global) 
var->Son variables globales
lat y const->Globales y/o locales(depende de su definición)